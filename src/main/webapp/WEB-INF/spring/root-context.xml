<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 이곳에서 interceptor 해보기 -->
	
	
	<!-- 트랙젝션 매니저 등록하기 -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"></property>
		</bean>
		<tx:annotation-driven />
		
		<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
			<property name="url" value="jdbc:mysql://localhost:3306/blog"></property>
			<property name="username" value="root"></property>
			<property name="password" value="123"></property>
		</bean>		
		
		<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean" init-method="afterPropertiesSet">		
			<property name="dataSource" ref="dataSource"></property>
			<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
			<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property>
		</bean>
		
		<!-- sqlsession들을 등록한 것임. -->
		<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
			<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"></constructor-arg>
		</bean>
		
		<!--aop를 빈으로 등록함. -->
		<context:component-scan base-package="org.zerock.aop"></context:component-scan>
		<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
		<!-- 밑의 것은 aop 를 xml형식으로 사용하기 위해 등록한 것임. -->
		<aop:config></aop:config>
		
		<!-- 이곳에서 BoardDao를 빈으로 등록 해준다 Beangraph를 통해서 확인 가능.  -->				
		<context:component-scan base-package="org.zerock.BoardDao"></context:component-scan>
		<!-- BoardService를 빈으로 등록함ㅎ 위의 클래스는 Repository로 등록되어있고 아래는 Service로 어노테이션 처리  -->
		<context:component-scan base-package="org.zerock.BoardService"></context:component-scan>
</beans>

